## ============================================================================
## SCRIPT NAME : abre
## PURPOSE     : save encrypted password to flat-file database
## AUTHOR      : Ismael Angelo Casimpan Jr. (ismael.angelo@casimpan.com)
## 
## VERSION     : 
## ============================================================================

#!/bin/bash

DEBUG_ACTIVE=

## include library scripts
. ../lib/common.sh.lib

## do pre-requisites for script
check_needed_tools ## for needed binaries
check_KF_exist     ## existence of $KEY_FILE

## default is to get password
internal_cmd="GET_PASSWORD_NOW"

while getopts "sd:u:k:" opt; do
  case $opt in
    u) 
      USER_GIVEN=$OPTARG
      ;;
    d) 
      PWD_DB_FILE=$OPTARG
      ;;
    k) 
      KEY_FILE=$OPTARG
      ;;
    s) ## set_password. No parameter needed
     internal_cmd="SET_PASSWORD_NOW"
     ;;
    \?)
      echo "Invalid option: -$OPTARG" >&2
      break
      ;;
    :)
      echo "Option -$OPTARG requires an argument." >&2
      break
      ;;
  esac
done

#### CODE STARTS EXECUTING HERE...after it parsed parameters above...
if [ -z $USER_GIVEN ]; then
    usage
else
    ## 
    ## GET_PASSWORD_NOW is the default. But make sure $PWD_DB_FILE exist too
    ##
    if [ "$internal_cmd" == "GET_PASSWORD_NOW" ] && [ -e $PWD_DB_FILE ]; then
        get_password $USER_GIVEN
    ##
    ## SET_PASSWORD_NOW must be explicitly chosen
    ## 
    elif [ "$internal_cmd" == "SET_PASSWORD_NOW" ]; then
	    set_password $USER_GIVEN
   ##
   ## shout '__PWD_DB_FILE_MISSING__' 
   ##
   else
      echo "$pwd_db_file_missing"
   fi
fi
